{"createdAt":"2025-07-10T04:46:54.652Z","updatedAt":"2025-07-11T03:17:59.577Z","id":"fWQ7McykvVHCbOP2","name":"backup_n8n_workflows","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"dbf8037f-0249-48c7-8e8a-8d23cb1bd3c1","name":"Execute workflow","type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-220,200]},{"parameters":{"operation":"toJson","mode":"each","options":{"encoding":"utf8","fileName":"={{ $json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $json.id }}.json"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1240,200],"id":"614ad9cb-e41c-431b-a948-5e3def64ca5e","name":"Convert to File","notesInFlow":false},{"parameters":{"filters":{},"requestOptions":{}},"id":"76d9dc80-6aae-416b-b6e4-01bbd87ad16d","name":"Get Workflows from N8N","type":"n8n-nodes-base.n8n","typeVersion":1,"position":[1020,200],"credentials":{"n8nApi":{"id":"BH4EWPeKYm43X10K","name":"n8n account"}}},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"name","renameField":true,"outputFieldName":"names"}]},"options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[800,200],"id":"a462a7ea-e0b9-4db5-8459-c3aaa471b47f","name":"Map to GH Workflow Names [Aggregate]"},{"parameters":{"authentication":"oAuth2","resource":"file","operation":"edit","owner":{"__rl":true,"value":"https://github.com/gasscoelho","mode":"url"},"repository":{"__rl":true,"value":"n8n-workflows","mode":"list","cachedResultName":"n8n-workflows","cachedResultUrl":"https://github.com/gasscoelho/n8n-workflows"},"filePath":"=workflows{{ $('Fields').item.json.is_private \n  ? '/private/' \n  : '/' }}{{ ($('Fields').item.json.is_archived ? '_archived_' : '') + $binary.data.fileName }}","binaryData":true,"commitMessage":"={{ $('Fields').item.json.commit_message }}"},"id":"9ba48c73-7edb-4824-8194-980ec04b7a9b","name":"Update Workflow File","type":"n8n-nodes-base.github","typeVersion":1,"position":[3080,340],"webhookId":"64afd858-7a51-4cfc-8cdf-46e9a310ad10","credentials":{"githubOAuth2Api":{"id":"bKq9sAiFoJ9Xx9Ub","name":"GitHub account"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"1709c392-48d9-4edf-9d56-df07e141e656","leftValue":"={{ $('Fields').item.json.n8n_exists_in_gh }}","rightValue":"","operator":{"type":"boolean","operation":"false","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"create"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"leftValue":"={{ $('Fields').item.json.n8n_exists_in_gh }}","rightValue":"private","operator":{"type":"boolean","operation":"true","singleValue":true},"id":"58e9656c-f997-4769-a698-d425775b8f52"}],"combinator":"and"},"renameOutput":true,"outputKey":"update"}]},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[2720,440],"id":"43803d88-5da5-4c7d-b047-e0b8a6f94cb7","name":"Define GH Operation"},{"parameters":{"authentication":"oAuth2","resource":"file","owner":{"__rl":true,"value":"https://github.com/gasscoelho/n8n-workflows","mode":"url"},"repository":{"__rl":true,"value":"n8n-workflows","mode":"list","cachedResultName":"n8n-workflows","cachedResultUrl":"https://github.com/gasscoelho/n8n-workflows"},"filePath":"=workflows{{ $('Fields').item.json.is_private \n  ? '/private/' \n  : '/' }}{{ ($('Fields').item.json.is_archived ? '_archived_' : '') + $binary.data.fileName }}","binaryData":true,"commitMessage":"={{ $('Fields').item.json.commit_message }}"},"id":"4433ceb1-6faf-42db-b804-f12e8eee8df7","name":"Create Workflow File","type":"n8n-nodes-base.github","typeVersion":1,"position":[3080,160],"webhookId":"8d3ade9d-7adc-42bd-9e0e-8d0de8cb63b1","credentials":{"githubOAuth2Api":{"id":"bKq9sAiFoJ9Xx9Ub","name":"GitHub account"}}},{"parameters":{"assignments":{"assignments":[{"id":"39d049e2-3a1b-4662-a88d-7c2e060a0084","name":"is_archived","value":"={{ $('Get Workflows from N8N').item.json.isArchived }}","type":"boolean"},{"id":"7a35661a-a818-4724-acd9-9c57207bbf69","name":"is_private","value":"={{ $('Get Workflows from N8N').item.json.tags.map(tag => tag.name).includes('private') }}","type":"boolean"},{"id":"38063cda-e6db-444b-92f5-37fb84d85592","name":"n8n_exists_in_gh","value":"={{ \n  $node['Map to GH Workflow Names [Aggregate]'].json.names.map(\n    n => n.replace(/\\.enc$/, '')\n  )\n  .includes($binary.data.fileName) \n}}","type":"boolean"},{"id":"e3688ce7-c0dd-4992-be89-74197a12cf65","name":"commit_message","value":"=bkp: `{{ $('Get Workflows from N8N').item.json.name }}` {{ $now.format('yyyy-MM-dd') }}","type":"string"}]},"includeOtherFields":true,"include":"selected","includeFields":"data","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1920,420],"id":"81abb5b4-9140-4b6f-a704-b7f5b009d4cd","name":"Fields"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const crypto = require('crypto');\n\n// Get the encrypted binary data from the previous node\nconst binaryData = $input.item.binary;\n\n// Use the same password as encryption\nconst password = $env.WORKFLOW_ENCRYPTION_KEY;\n\n// Error handling for missing binary data\nif (!binaryData || !binaryData.data || !binaryData.data.data) {\n  throw new Error('No binary data found in input');\n}\n\n// Get the encrypted file data\nconst encryptedBuffer = Buffer.from(binaryData.data.data, 'base64');\n\n// Extract salt, IV, and encrypted data\nconst salt = encryptedBuffer.slice(0, 16);\nconst iv = encryptedBuffer.slice(16, 32);\nconst encrypted = encryptedBuffer.slice(32);\n\n// Derive the same key using the extracted salt\nconst key = crypto.pbkdf2Sync(password, salt, 100000, 32, 'sha512');\n\n// Decrypt the file\nconst algorithm = 'aes-256-cbc';\nconst decipher = crypto.createDecipheriv(algorithm, key, iv);\n\nlet decrypted = decipher.update(encrypted);\ndecrypted = Buffer.concat([decrypted, decipher.final()]);\n\n// Return the decrypted data\nconst originalFileName = binaryData.data.fileName || 'file';\nconst cleanFileName = originalFileName.replace(/\\.enc$/, '');\n\nreturn {\n  binary: {\n    data: {\n      data: decrypted.toString('base64'),\n      mimeType: 'application/octet-stream',\n      fileName: `decrypted_${cleanFileName}`\n    }\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2460,100],"id":"400c824a-4a7c-4029-8bd8-6ae155844254","name":"Decrypt","disabled":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"0e399e98-d7fe-4103-ab33-eb941b2cc02f","leftValue":"={{ $json.is_private }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2200,420],"id":"ca23b362-bdc9-46a5-b9d8-ec8bdf692a8d","name":"Is Private Workflow?"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[3500,500],"id":"a090f959-c70c-4a8b-b122-c5cd274120f2","name":"Loop End"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[1500,200],"id":"336d89a6-03e6-415e-a791-bf68af5c945e","name":"Loop Over Workflows"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const crypto = require('crypto');\n\n// Get the binary data from the previous node\nconst binaryData = $input.item.binary;\n\n// Password to encrypt\nconst password = $env.WORKFLOW_ENCRYPTION_KEY;\n\nconst salt = crypto.randomBytes(16);\nconst key = crypto.pbkdf2Sync(password, salt, 100000, 32, 'sha512');\n\nconst algorithm = 'aes-256-cbc';\nconst iv = crypto.randomBytes(16);\n\n// Error handling for missing binary data\nif (!binaryData || !binaryData.data || !binaryData.data.data) {\n  throw new Error('No binary data found in input');\n}\n\n// Get the binary file data\nconst fileBuffer = Buffer.from(binaryData.data.data, 'base64');\n\n// Encrypt the file\nconst cipher = crypto.createCipheriv(algorithm, key, iv);\nlet encrypted = cipher.update(fileBuffer);\nencrypted = Buffer.concat([encrypted, cipher.final()]);\n\n// Prepend salt + IV to encrypted data (needed for decryption)\nconst encryptedWithMetadata = Buffer.concat([salt, iv, encrypted]);\n\n// Return the encrypted data\nreturn {\n  binary: {\n    data: {\n      data: encryptedWithMetadata.toString('base64'),\n      mimeType: 'application/octet-stream',\n      fileName: `${binaryData.data.fileName || 'file'}.enc`\n    }\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2460,300],"id":"512286d3-16fa-46a5-bc4f-59ae07f9f5ec","name":"Encrypt"},{"parameters":{"content":"## Prerequisites\nRepository initialized with a **workflows** folder containing a **workflows/private** subfolder","height":520,"width":460},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0],"id":"8b2c86e9-12be-4a64-8071-e3e6567fda71","name":"Sticky Note"},{"parameters":{"authentication":"oAuth2","resource":"file","operation":"list","owner":{"__rl":true,"value":"https://github.com/gasscoelho","mode":"url"},"repository":{"__rl":true,"value":"n8n-workflows","mode":"list","cachedResultName":"n8n-workflows","cachedResultUrl":"https://github.com/gasscoelho/n8n-workflows"},"filePath":"=workflows/private"},"id":"f0380620-d985-4b89-bd4e-919d6179d603","name":"Get Private Workflows from GH","type":"n8n-nodes-base.github","typeVersion":1,"position":[180,320],"alwaysOutputData":true,"webhookId":"5bf90a16-9180-41d5-9d72-38908e093173","credentials":{"githubOAuth2Api":{"id":"bKq9sAiFoJ9Xx9Ub","name":"GitHub account"}}},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[560,200],"id":"a172f691-904a-4ac9-bed2-b6a8861c4744","name":"Merge","notesInFlow":false},{"parameters":{"authentication":"oAuth2","resource":"file","operation":"list","owner":{"__rl":true,"value":"https://github.com/gasscoelho","mode":"url"},"repository":{"__rl":true,"value":"n8n-workflows","mode":"list","cachedResultName":"n8n-workflows","cachedResultUrl":"https://github.com/gasscoelho/n8n-workflows"},"filePath":"=workflows"},"id":"460b3f76-c51a-4433-bf05-93e35720e412","name":"Get Public Workflows from GH","type":"n8n-nodes-base.github","typeVersion":1,"position":[180,120],"alwaysOutputData":true,"webhookId":"5bf90a16-9180-41d5-9d72-38908e093173","credentials":{"githubOAuth2Api":{"id":"bKq9sAiFoJ9Xx9Ub","name":"GitHub account"}}},{"parameters":{"content":"### Note\nThere's a minor transformation happening at `n8n_exists_in_gh` field set.\n\nIt's basically removing the `.enc` suffix, since N8N workflows won't have that.\n","height":320,"width":340,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1800,260],"id":"23b4740e-1d25-43ce-a375-f3ec0cccc620","name":"Sticky Note1"},{"parameters":{"content":"### Note\nCouple of things happening with the `path` option:\n1. Private workflows are being pushed to the `workflows/private/` folder.  \n2. Archived workflows are being prefixed with `_archived`.\n","height":520,"width":400,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2940,0],"id":"7e8a4e74-c19f-495f-bf37-13aa6d5cc53a","name":"Sticky Note2"}],"connections":{"Execute workflow":{"main":[[{"node":"Get Public Workflows from GH","type":"main","index":0},{"node":"Get Private Workflows from GH","type":"main","index":0}]]},"Convert to File":{"main":[[{"node":"Loop Over Workflows","type":"main","index":0}]]},"Get Workflows from N8N":{"main":[[{"node":"Convert to File","type":"main","index":0}]]},"Map to GH Workflow Names [Aggregate]":{"main":[[{"node":"Get Workflows from N8N","type":"main","index":0}]]},"Update Workflow File":{"main":[[{"node":"Loop End","type":"main","index":0}]]},"Define GH Operation":{"main":[[{"node":"Create Workflow File","type":"main","index":0}],[{"node":"Update Workflow File","type":"main","index":0}]]},"Create Workflow File":{"main":[[{"node":"Loop End","type":"main","index":0}]]},"Fields":{"main":[[{"node":"Is Private Workflow?","type":"main","index":0}]]},"Is Private Workflow?":{"main":[[{"node":"Encrypt","type":"main","index":0}],[{"node":"Define GH Operation","type":"main","index":0}]]},"Loop End":{"main":[[{"node":"Loop Over Workflows","type":"main","index":0}]]},"Loop Over Workflows":{"main":[[],[{"node":"Fields","type":"main","index":0}]]},"Encrypt":{"main":[[{"node":"Define GH Operation","type":"main","index":0}]]},"Get Private Workflows from GH":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"Map to GH Workflow Names [Aggregate]","type":"main","index":0}]]},"Get Public Workflows from GH":{"main":[[{"node":"Merge","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"19190513-24f3-41e7-9409-c06fdada3184","triggerCount":0,"tags":[]}