{"createdAt":"2025-07-06T18:11:08.991Z","updatedAt":"2025-07-11T01:55:19.281Z","id":"qMZYQ6NnipfMInws","name":"ticket_content_generator","active":true,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"generate/ticket","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-1040,100],"id":"32fe01a3-46d0-465c-b783-ef1983748835","name":"Webhook","webhookId":"4a5a2f9f-f084-4567-b301-7748d26aefb1"},{"parameters":{"assignments":{"assignments":[{"id":"c4904ec5-62ed-47aa-a374-1c8d82f70cb3","name":"issue_type","value":"={{ $json.body.issue_type }}","type":"string"},{"id":"5e1c7c4a-7807-4f4b-b449-8cc5770a6939","name":"issue_details","value":"={{ $json.body.issue_details }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-820,100],"id":"182aec22-72cb-4c03-849f-b3afb89f5201","name":"Edit Fields"},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4.1-nano-2025-04-14","mode":"list","cachedResultName":"GPT-4.1-NANO-2025-04-14"},"messages":{"values":[{"content":"=<persona>\nYou are an experienced project manager tasked with creating clear and concise issue descriptions for Linear, a project management tool. Your goal is to write descriptions that are easy to understand while providing essential information.\n</persona>\n\nHere are the details for the issue you need to describe:\n\nIssue Type:\n<issue_type>\n{{ $json.issue_type }}\n</issue_type>\n\nIssue Description:\n<issue_description>\n{{ $json.issue_details }}\n</issue_description>\n\nPlease follow these guidelines when creating issue descriptions:\n1. Be concise but clear\n2. Focus on describing the problem or task\n3. Avoid unnecessary sections\n4. Use simple, straightforward language\n5. For bug tickets, include a \"Steps to Reproduce\" section\n6. For other types of issues, omit the \"Steps to Reproduce\" section\n\nBefore crafting your final response, conduct your analysis inside <issue_analysis> tags. Consider the following:\n1. Identify the issue type and its implications for the description structure\n2. Extract the core problem or task from the issue description\n3. List the most important details to include\n4. Brainstorm 3-5 potential titles for the issue\n5. Outline the main points for the description\n6. If it's a bug, break down the steps to reproduce, numbering each step\n\n<example>\n<issue_type>\nfeature\n</issue_type>\n<issue_description>\nWe noticed the order of actions when persisting a Flow, isn't guaranteed. So this could lead to a scenario where the user configures a flow with a layout X but when saving the layout would shift to Y -- because behind the scenes we do another fetch go get the persisted data, so we'd refresh the graph.\n\nThis also impacts the flow executions, so we can have a order X in flow management, but when we go to the flow execution we'd see an order Y.\n</issue_description>\n<issue_analysis>\n1. Key phrases:\n   - \"order of actions when persisting a Flow, isn't guaranteed\"\n   - \"user configures a flow with a layout X but when saving the layout would shift to Y\"\n   - \"we can have a order X in flow management, but when we go to the flow execution we'd see an order Y\"\n\n2. Issue type: Feature\n   This affects the description structure by focusing on the problem and its impact, without including steps to reproduce.\n\n3. Core problem: Inconsistent action order in Flow persistence and execution\n\n4. Important details to include:\n   - Action order not guaranteed when persisting a Flow\n   - Discrepancy between configured layout and saved layout\n   - Inconsistency between flow management and flow execution\n\n5. Potential titles:\n   - \"Ensure Deterministic Action Order in Flow Persistence\"\n   - \"Fix Inconsistent Action Order in Flow Management and Execution\"\n   - \"Implement Guaranteed Action Order for Flow Operations\"\n   - \"Resolve Action Order Discrepancies in Flow Handling\"\n   - \"Synchronize Action Order Across Flow Persistence and Execution\"\n\n6. Structured outline:\n   - Introduction: Brief description of the issue\n   - Problem statement: Inconsistent action order\n   - Impact on user experience\n   - Specific scenarios affected\n   - Conclusion: Need for a solution\n\n7. Not applicable (not a bug)\n\nAfter careful analysis, the most appropriate title and description have been determined.\n</issue_analysis>\n<result>\nEnsure Consistent Flow Order in the Management and Execution Page\n---\nCurrently, the order of actions in a flow is not guaranteed, leading to inconsistencies when persisting and executing flows. This can cause:\n\n- A user configuring a flow with layout X, but upon saving, the layout shifts to Y due to background data fetching and graph refreshing.\n- Discrepancies between the order of actions in flow management (X) and the order seen in flow execution (Y).\n\nThese inconsistencies significantly impact user experience and the reliability of flow configurations. The issue affects both the initial persistence of a flow and subsequent executions, potentially causing confusion and errors in workflow management.\n</result>\n</example>\n\nAfter your analysis, provide your response in JSON format with the following structure:\n\n{\n  \"title\": \"[Title]\",\n  \"content\": \"[Content]\"\n}\n\nEnsure that your final output adheres to this simple text structure, with the title and content separated by three dashes.\n\nNow, please analyze the provided issue type and description, and create an appropriate issue description following the guidelines above."}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[-600,100],"id":"42f63db9-e50d-480a-9be7-796da041b815","name":"OpenAI","credentials":{"openAiApi":{"id":"nQmAhyUVFZdJQzBc","name":"OpenAi account"}}},{"parameters":{"respondWith":"json","responseBody":"={{ \n  { \n    title: $json.title,\n    content: $json.content\n  } \n}}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[0,0],"id":"ee6a08a5-107b-49fa-b1cf-fb4680a54b86","name":"Respond to Webhook"},{"parameters":{"jsCode":"const raw = $input.first().json.message.content;\nconst parsed = JSON.parse(raw);\nreturn [\n  {\n    json: {\n      title: parsed.title,\n      content: parsed.content,\n    }\n  }\n];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-220,100],"id":"28c3be11-a6a8-45cb-a973-e508f1be0fe7","name":"JSON Parse (Code)","onError":"continueErrorOutput"},{"parameters":{"respondWith":"text","responseBody":"Failed to parse OpenAI content as JSON","options":{"responseCode":422}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[0,200],"id":"6e9a7cf4-092f-42a6-aa37-ca7b5e43f54e","name":"Respond to Webhook as error"}],"connections":{"Webhook":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"OpenAI","type":"main","index":0}]]},"OpenAI":{"main":[[{"node":"JSON Parse (Code)","type":"main","index":0}]]},"JSON Parse (Code)":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}],[{"node":"Respond to Webhook as error","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"bac63d4c-bead-43f7-9a5d-372b03d83b19","triggerCount":1,"tags":[]}